// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  ADMIN
  USER
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  profile   String?
  email     String   @unique
  password  String

  role      ROLE?     @default(USER)
  userinfo  Userinfo?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Userinfo {
  id        String   @id @default(cuid())
  userId    String   @unique
  // add later
  completedChallenges Challenge[]

  user      User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// use crons job to delete this later on
model Refreshtoken {
  id        String   @id @default(cuid())
  
  userId    String   @unique
  token     String   @unique
  expiresAt DateTime 
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

// this is the keyboard challenge that they need to type
model Challenge {
  id          String   @id @default(cuid())
  title       String   @unique
  description String
  challenge   String   @unique
  difficulty  Difficulty

  userCompleted Userinfo[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}